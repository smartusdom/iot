version: '3.7'
services:

  socks5:
    image: serjs/go-socks5-proxy
    container_name: socks5
    restart: always
    env_file:
      - .env
    ports:
      - 1080:1080
    networks:
      - backend
      
  influx:
    image: influxdb:1.8-alpine
    container_name: influx
    restart: always
    env_file:
      - .env
    networks:
      - backend
    ports:
      - 8086:8086
    volumes:
      - ./data/influx:/var/lib/influxdb
    depends_on:
      - telegraf

  telegraf:
    image: telegraf:alpine
    container_name: telegraf
    restart: always
    environment:
      HOST_PROC: /rootfs/proc
      HOST_SYS: /rootfs/sys
      HOST_ETC: /rootfs/etc
    networks:
      - backend
    ports:
      - "55559:55559/udp"
    volumes:
      - ./conf/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /sys:/rootfs/sys:ro
      - /proc:/rootfs/proc:ro
      - /etc:/rootfs/etc:ro

  grafana:
    image:  grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    restart: always
    links:
      - influx:influx
    user: "0"
    networks:
      - backend
    volumes:
      - ./data/grafana:/var/lib/grafana
    depends_on:
      - influx

  portainer:
    image: portainer/portainer:latest
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    environment:
      - VIRTUAL_HOST=influx
    ports:
      - 127.0.0.1:8000:8000
      - 127.0.0.1:9000:9000
    networks:
      - backend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data/portainer:/data

      
# https://github.com/kylemanna/docker-openvpn/blob/master/docs/docker-compose.md
# docker-compose run --rm openvpn ovpn_genconfig -u udp://VPN.SERVERNAME.COM
# docker-compose run --rm openvpn ovpn_initpki      

  openvpn:
    cap_add:
     - NET_ADMIN
    image: kylemanna/openvpn
    container_name: openvpn
    ports:
     - "1194:1194/udp"
    restart: always
    volumes:
     - ./data/openvpn:/etc/openvpn
  
networks:
  backend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.16.0/24